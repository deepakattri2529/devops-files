
ON ANSIBLE SERVER NODE

#wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
#yum install epel-release-latest-7.noarch.rpm
#yum update -y
#yum install git python python-level python-pip openssl ansible -y
#vi /etc/ansible/hosts
Ex 1: Ungrouped hosts, specify before any group headers.
[demo]
172.x.x.x
172.x.x.x
:wq
#vi /etc/ansible/ansible.cfg (Remove #)
inventory      = /etc/ansible/hosts
sudo_user      = root

On server Node $ Client Node

#adduser ansible
#passwd ansible
#visudo (make ansible as root user)

## Allow root to run any commands anywhere
root    ALL=(ALL)       ALL
ansible ALL=(ALL) NOPASSWD: ALL (ADD THIS LINE)
:wq
#su -ansible

#vi /etc/ssh/sshd_config (On server Node and client node as root user)

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes  (remove #)
#StrictModes yes


To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes (remove #)
#PermitEmptyPasswords no
#PasswordAuthentication no (put #)

:wq

Now loging as ansible user on both node
#su - ansible

go to ansible server
su - ansible
ssh 172.x.x.x (asking passwd for login)
#ssh-keygen
#cd .ssh/
#ssh-copy-id ansible@172.x.x.x (node public ip)


Ansible playbooks

#vi target.yml
--- # my fisrst twating yaml playbook
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  gather_facts: yes
:wq
#ansible-playbook target.yml

#vi task.yml
--- # my task playbook
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: install HTTPD on linux
      action: yum name=httpd state=installed
:wq
#ansible-playbook task.yml

#vi var.yml
--- # my var playbook
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  vars:
     pkgname: httpd
  tasks:
    - name: install httpd
      action: yum name='{{pkgname}}' state=installed
:wq
#ansible-playbook var.yml

#vi handlers.yml
--- # my handlers playbook
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: install httpd
      action: yum name=httpd state=installed
      notify: restart httpd
  handlers:
    - name: restart httpd
      action: service name=httpd state=restarted

:wq

#ansible-playbook handlers.yml


#vi loop.yml
--- # loop playbook
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: add list of user
      user: name='{{item}}' state=present
      with_items:
        - deepak
        - rahul
:wq


#vi condition.yml
--- # my condition playboom
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: install apache server on debian
      command: apt-get -y install apache2
      when: ansible_os_family == "Debian"
    - name: install apache server on redhat
      command: yum -y install httpd
      when: ansible_os_family == "RedHat"
:wq

Roles playbook


#mkdir -p playbook/roles/webserver/tasks
#cd playbook/
#touch roles/webserver/tasks/main.yml
- name: install on RedHat
  yum: pkg=httpd state=latest
:wq

#touch master.yml
--- # master playbook for webserver
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  roles:
    - webserver
:wq

